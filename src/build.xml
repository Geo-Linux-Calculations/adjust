<project name="adjust" default="deploy" >
    <property file="/ngs/projects/database/conf/ngsidb_ant_build.properties"/>
    <property name="exe_name" value="adjust"/>
    <property name="exe_name.w" value="${exe_name}.w"/>
    <property name="destbindir" location="${BLUEBOOKDIR}/bin" />
    <property name="WRAPPER" value="${BLUEBOOKDIR}/scripts/${WRAPPER_SCRIPT}" />
    <property name="build" location="build"/>
    <property name="obj" location="${build}/obj"/>
    <property name="executable" location="${destbindir}/${exe_name.w}"/>
    <property name="pwd" location=""/>
    <property name="Preplt2version" value="${Preplt2version_in}"/>
    <property name="Adjustversion" value="${Adjustversion_in}"/>
    <property name="Obschkversion" value="${Obschkversion_in}"/>
    <property name="Chkobsversion" value="${Chkobsversion_in}"/>
    <property name="Obsdesversion" value="${Obsdesversion_in}"/>
    <property name="Adjustvvv" value="${Adjustvvv_in}"/>
    <property name="Chkobsvvv" value="${Chkobsvvv_in}"/>
    <property name="Obschkvvv" value="${Obschkvvv_in}"/>
    <property name="date" value="${date_in}"/>
    <property name="ALLdate" value="${ALLdate_in}"/>
    <property name="Preplt2date" value="${Preplt2date_in}"/>
    <property name="Adjustdate" value="${Adjustdate_in}"/>
    <property name="Obschkdate" value="${Obschkdate_in}"/>
    <property name="Chkobsdate" value="${Chkobsdate_in}"/>
    <property name="Obsdesdate" value="${Obsdesdate_in}"/>
    <property name="Modifieddate" value="${Modifieddate_in}"/>
    <property name="dev_dir" value="/ngs/projects/web/testweb/devlinuxlocal/cgi/cgi-bin"/>
    <property name="test_dir" value="/ngs/projects/web/testweb/testlinuxlocal/cgi/cgi-bin"/>
    <property name="prod_dir" value="/ngs/projects/web/newweb/linuxlocal/cgi/cgi-bin"/>
    <taskdef resource="cpptasks.tasks"/>

    <!-- set the operating system test properties -->
    <condition property="isWindows">
      <os family="windows" />
    </condition>

    <condition property="isUnix">
      <os family="unix" />
    </condition>

    <!-- create directories for build and obj-->
    <target name="init" if="isUnix">
      <mkdir dir="${build}"/>
      <mkdir dir="${obj}"/>
      <mkdir dir="${destbindir}/backup" />
    </target>
    <!-- compile C-modules-->
    <target name="c_compile" depends="f_compile" if="isUnix">
        <cc name="cc" subsystem="console" objdir="${obj}" warnings="none">
           <compilerarg value="-g" if="debug" />
           <compilerarg value="-DSolaris" />
        </cc>
    </target>
    <!-- compile Fotran-modules-->
    <target name="f_compile" depends="init" if="isUnix">
      <cc name="f77" objdir="${obj}" subsystem="console">
           <compilerarg value="-g" if="debug" />
           <compilerarg value="-e" />
           <compilerarg value="-DSolaris" />
           <compilerarg value="-DNGS_UNIX_ENV" />
           <!--compilerarg value="-fpp" /-->
           <fileset dir=".">
              <include name="adjust.for" />
              <include name="mods.for" />
              <include name="subs1.for" />
              <include name="subs2.for" />
              <include name="fortlib3/afvc.for" />
              <include name="fortlib3/cmrhs2.for" />
              <include name="fortlib3/ezyplot.for" />
              <include name="fortlib3/getofil_ux.for" />
              <include name="fortlib3/hogk.for" />
              <include name="fortlib3/newhog.for" />
              <include name="fortlib3/newsubs.F" />
              <include name="fortlib3/obseqw.for" />
              <include name="fortlib3/rgps2.for" />
              <include name="fortlib3/rnneu.for" />
              <include name="fortlib3/sysdep_ux.for" />
              <include name="fortlib3/tmisc.for" />
              <include name="fortlib3/tolgh2.for" />
              <include name="fortlib3/upcov.for" />
              <include name="fortlib3/vfcgps.for" />
           </fileset>
           <includepath >
             <pathelement location="."/>
             <pathelement location="${SYBASE_HOME}/include"/>
             <pathelement location="./inclib2"/>
             <pathelement location="./inclib3"/>
           </includepath>
      </cc>
    </target>
    <!-- link objects and make executable-->
    <target name="linkallunix" depends="c_compile" if="isUnix">
       <antcall target="backupapp"/>
       <cc name="f77" outtype="executable" subsystem="console" outfile="${executable}">
         <fileset dir="${obj}" includes="*.o"/>
         <libset dir="${USR_HOME}/lib" libs="nsl,m,dl" />
       </cc>
    </target>
    <target name="linkallwindows" if="isWindows">
        <exec executable="Q:\shared\SDD\Software_Downloads\MinGW\bin\g77" >
           <arg value="-xf77-cpp-input" />
           <arg value="-Wall" />
           <arg value="-ffortran-bounds-check" />
           <arg value="adjust.for" />
           <arg value="mods.for" />
           <arg value="subs1.for" />
           <arg value="subs2.for" />
           <arg value="afvc.for" />
           <arg value="cmrhs2.for" />
           <arg value="ezyplot.for" />
           <arg value="getofil_ux.for" />
           <arg value="hogk.for" />
           <arg value="newhog.for" />
           <arg value="newsubs.F" />
           <arg value="obseqw.for" />
           <arg value="rgps2.for" />
           <arg value="rnneu.for" />
           <arg value="sysdep_g77.for" />
           <arg value="tolgh2.for" />
           <arg value="upcov.for" />
           <arg value="vfcgps.for" />
           <arg value="-o" />
           <arg  value="adjust" />
         </exec>
   </target>

   <!-- define our main/default target -->
   <target name="linkall" depends="linkallunix,linkallwindows">
    <echo message="Operating System: ${os.name}" />
   </target>
   <target name="deployweb" depends="deploy,isdev,istest,isprod">
         <antcall target="versioning"/>
         <antcall target="changepermissionweb"/>
         <echo message="ADJUST suite is deployed" />
   </target>
   <target name="deploybetaweb" depends="deploy,isbeta">
         <antcall target="versioning"/>
         <antcall target="changepermissionweb"/>
         <echo message="ADJUST suite is deployed" />
   </target>


    <target name="deploy" depends="linkall" if="isUnix">
      <!-- Move executable to deployment directory -->
      <!-- dev server exe is in build directory -->
      <!-- test/prod exe is moved to /ngs/projects/bluebook/bin -->
         <chmod file="${executable}" perm="775" />
         <antcall target="changegroup"/>
         <exec executable="ln" >
            <arg value="-s" />
            <arg value="${WRAPPER}" />
            <arg value="${destbindir}/${exe_name}" />
         </exec>

         <antcall target="scpdeimos"/>

         <exec executable="rm" >
            <arg value="adjust.zip" />
         </exec>
         <antcall target="zip"/>
         <exec executable="banner" >
            <arg value="${NGS_SERVERENV}" />            
         </exec>
         <echo message="Application deployed to ${destbindir}/${exe_name.w}" />
    </target>
    <!-- Change group to ngssdd in TEST and PROD only -->
    <target name="changegroup" unless="DEV" if="isUnix">
         <exec executable="chgrp"  >
           <arg value="-f" />
           <arg value="${RELTEAM_UNXGRP}" />
           <arg value="${executable}" />
         </exec>
    </target>
    <!-- backup the executable only in production environment -->
    <target name="backupapp" if="PROD,isUnix">
         <tstamp/>
         <exec executable="mv" >
            <arg value="${destbindir}/${exe_name.w}" />
            <arg value="${destbindir}/backup/${exe_name.w}_${DSTAMP}${TSTAMP}" />
         </exec>
    </target>
    <target name="clean" if="isUnix">
         <exec executable="rm"  >
           <arg value="-rf" />
           <arg value="${obj}" />
         </exec>
    </target>

    <target name="zip" if="isUnix">
         <exec executable="zip"  >
           <arg value="-Dl" />
           <arg value="-j" />
           <arg value="adjust" />
           <arg value="adjust.for" />
           <arg value="mods.for" />
           <arg value="subs1.for" />
           <arg value="subs2.for" />
           <arg value="makefile_g77.w32" />
           <arg value="makefile_wat.w32" />
           <arg value="fortlib3/afvc.for" />
           <arg value="fortlib3/cmrhs2.for" />
           <arg value="fortlib3/ezyplot.for" />
           <arg value="fortlib3/getofil_ux.for" />
           <arg value="fortlib3/hogk.for" />
           <arg value="fortlib3/newhog.for" />
           <arg value="fortlib3/newsubs.F" />
           <arg value="fortlib3/obseqw.for" />
           <arg value="fortlib3/rgps2.for" />
           <arg value="fortlib3/rnneu.for" />
           <arg value="fortlib3/sysdep_g77.for" />
           <arg value="fortlib3/tolgh2.for" />
           <arg value="fortlib3/upcov.for" />
           <arg value="fortlib3/vfcgps.for" />
           <arg value="build.xml" />
         </exec>
         <exec executable="zip"  >
           <arg value="-D" />
           <arg value="-j" />
           <arg value="-g" />
           <arg value="adjust" />
           <arg value="adjust.exe" />
         </exec>
         <exec executable="mv" >
            <arg value="adjust.zip" />
            <arg value="downloads/adjust.zip" />
         </exec>
    </target>
    <target name="versioning">
      <echo message="Update version number and date for index.shtml"/>
      <exec executable="/bin/sh"  >
          <arg value="-c" />
          <arg value="/usr/bin/perl -p -i -e 's/Datemmyyyy/${date}/g' web/index.shtml;
                      /usr/bin/perl -p -i -e 's/ALLmmyyyy/${ALLdate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Preplt2mmyyyy/${Preplt2date}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Adjustmmyyyy/${Adjustdate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Obschkmmyyyy/${Obschkdate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Chkobsmmyyyy/${Chkobsdate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Obsdesmmyyyy/${Obsdesdate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Modifiedmmyyyy/${Modifieddate}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Preplt2xxx/${Preplt2version}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Adjustxxx/${Adjustversion}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Obschkxxx/${Obschkversion}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Chkobsxxx/${Chkobsversion}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Obsdesxxx/${Obsdesversion}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Adjustvvv/${Adjustvvv}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Chkobsvvv/${Chkobsvvv}/g' web/index.shtml;
		      /usr/bin/perl -p -i -e 's/Obschkvvv/${Obschkvvv}/g' web/index.shtml;"/>
      </exec> 
      <echo message="Copy index.shtml to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
      	  <arg value="-c"/>
          <arg value="scp -r ${pwd}/web/index.shtml ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>      
      <echo message="Copy adjust_supplemental.txt to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/adjust_supplemental.txt ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <echo message="Copy adjustment_guidelines.pdf to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/adjustment_guidelines.pdf ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <echo message="Copy adjust_all.zip to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/adjust_all.zip ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <echo message="Copy adjust.exe to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/adjust.exe ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <echo message="Copy adjust_v${Adjustvvv}.zip to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/adjust_v${Adjustvvv}.zip ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <!--echo message="Copy chkobs_v${Chkobsvvv}.zip to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/chkobs_v${Chkobsvvv}.zip ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec>
      <echo message="Copy obschk_v${Obschkvvv}.zip to ${PC_PATH}"/>
      <exec executable="/bin/sh"  >
          <arg value="-c"/>
          <arg value="scp -r ${pwd}/downloads/obschk_v${Obschkvvv}.zip ${CGI_SERVER_LOCAL}:${PC_PATH}" />
      </exec-->
    </target>
    <target name="isdev" if="DEV" >
      <property name="PC_PATH" value="/ngs/projects/web/testweb/htdocs/PC_PROD/ADJUST" />
      <property name="CGI_SERVER_LOCAL" value="ngs-vsu-deimos"/>
      <echo message="dev website location is ${CGI_SERVER_LOCAL}:${PC_PATH}/"/>
    </target>
    <target name="istest" if="TEST" >
      <property name="PC_PATH" value="/ngs/projects/web/testweb/testdocs/PC_PROD/ADJUST" />
      <property name="CGI_SERVER_LOCAL" value="ngs-vsu-deimos"/>
      <echo message="test website location is ${CGI_SERVER_LOCAL}:${PC_PATH}/"/>
    </target>
    <target name="isprod" if="PROD" >
      <property name="PC_PATH" value="/ngs/projects/web/newweb/htdocs/PC_PROD/ADJUST" />
      <property name="CGI_SERVER_LOCAL" value="deimos"/>
      <echo message="prod website location is ${CGI_SERVER_LOCAL}:${PC_PATH}/"/>
    </target>
    <target name="isbeta" >
      <property name="PC_PATH" value="/ngs/projects/web/testweb/betadocs/PC_PROD/ADJUST" />
      <property name="CGI_SERVER_LOCAL" value="deimos"/>
      <echo message="beta website location is ${CGI_SERVER_LOCAL}:${PC_PATH}/"/>
    </target>
    <target name="changepermissionweb">
      <echo message="ssh ${CGI_SERVER_LOCAL} chmod 775 ${PC_PATH}/*.zip" />
      <exec executable="/bin/sh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER_LOCAL} chmod 775 ${PC_PATH}/adjust_v${Adjustvvv}.zip" />
      </exec>
      <!--exec executable="/bin/sh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER_LOCAL} chmod 775 ${PC_PATH}/chkobs_v${Chkobsvvv}.zip" />
      </exec>
      <exec executable="/bin/sh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER_LOCAL} chmod 775 ${PC_PATH}/obschk_v${Obschkvvv}.zip" />
      </exec-->
    </target>

    <target name="scpdeimos" if="PROD" >
      <tstamp/>
      <echo message=" backup program on ${CGI_SERVER}:${destbindir} " />
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="scp ${CGI_SERVER}:${executable} ${CGI_SERVER}:${destbindir}/backup/${exe_name.w}_${DSTAMP}${TSTAMP}" />
      </exec>
      <echo message=" copying ${exe_name.w} to ${CGI_SERVER}:${destbindir} " />
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER} ln -s ${WRAPPER} ${destbindir}/${exe_name}" />
      </exec>
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="scp ${executable} ${CGI_SERVER}:${destbindir}" />
      </exec>
      <echo message="ssh ${CGI_SERVER} chmod 775 ${destbindir}" />
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER} chmod 775 ${executable}" />
      </exec>
      <echo message=" binary deployed to ${CGI_SERVER}:${destbindir}" />

      <echo message=" chgrp on ${CGI_SERVER}:${destbindir}" />
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER} chgrp -f ${RELTEAM_UNXGRP} ${executable}" />
      </exec>
      <exec executable="/bin/ksh"  >
          <arg value="-c" />
          <arg value="ssh ${CGI_SERVER} chgrp -f ${RELTEAM_UNXGRP} ${destbindir}/${script_name}" />
      </exec>
    </target>

</project>

